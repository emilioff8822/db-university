{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 1 Selezionare tutti gli studenti iscritti al corso di laurea in economia\
\
SELECT `students`.`id`, `students` . `name` , `students` .`surname` \
FROM `students`\
INNER JOIN `degrees`\
ON `students`. `degree_id` = `degrees`. `id`\
WHERE `degrees` . `name` LIKE "%ECONOMIA%"\
\
2 SELEZIONARE TUTTI I CORSI DI LAUREA MAGISTRALE DEL DIPARTIMENTO DI NEUROSCIENZE\
SELECT `degrees` . `name`\
FROM `degrees`\
INNER JOIN `departments`\
ON `degrees` . `department_id` = `departments`.`id`\
WHERE `departments` . `name` LIKE "%Dipartimento di Neuroscienze%"\
AND `degrees` . `level` = "magistrale"\
\
3 SELEZIONARE TUTTI I CORSI IN CUI INSGNA il teacher FULVIO AMATO id=44\
SELECT `courses` . `id` , `courses` . `name` AS `corsi_del_prof_fulvio_amato`\
FROM `courses`\
INNER JOIN `course_teacher`\
ON `course_teacher` . `course_id` = `courses`. `id`\
WHERE `course_teacher` . `teacher_id` = 44\
\
4 SELEZIONARE TUTTI GLI STUDENTI CON I DATI RELATIVI AL CORSO DI LAUREA ACUI SONO ISCRITTI E IL RELATIVO DIPARTIMENTO, IN ORDINE ALFABETICO PER COGNOME E E NOME\
\
SELECT `students`.`name`, `students`.`surname`, `students`.`date_of_birth`, `students`.`enrolment_date`, `students`.`fiscal_code`, `students`.`registration_number`, `students`.`email`, `degrees`.`name` AS `nome_corso_laurea`, `departments`.`name` AS `nome_dipartimento`\
FROM `students`\
INNER JOIN `degrees`\
ON `students`.`degree_id` = `degrees`.`id`\
INNER JOIN `departments`\
ON `degrees`.`department_id` = `departments`.`id`\
ORDER BY `students`.`surname`, `students`.`name`;\
\
\
5 SELEZIONA TUTTI I CORSI DI LAUREA CON I RELATIVI INSEGANTI\
SELECT `degrees` . `name` AS `nome_corso_laurea`,\
`courses`.`name`AS `nome_corso`,\
`teachers`.`name`AS `nome_professore`,\
`teachers`.`surname`AS `congome_professore`\
FROM `degrees`\
INNER JOIN `courses`\
ON `degrees`.`id`= `courses`.`degree_id`\
INNER JOIN `course_teacher`\
ON `courses`.`id`= `course_teacher`.`course_id`\
INNER JOIN `teachers`\
ON `course_teacher`.`teacher_id`=`teachers`.`id`\
\
\
6 SELEZIONARE TUTTI I DOCENTI CHE INSEGNANO NEL DIPARTIMENTO DI MATEMATICA\
\
SELECT DISTINCT `teachers`.`name`AS `nome_professore`,\
`teachers`.`surname`AS `congome_professore`\
FROM `teachers`\
INNER JOIN `course_teacher`\
ON `teachers`.`id`= `course_teacher`.`teacher_id`\
INNER JOIN `courses`\
ON `course_teacher`.`course_id`=`courses`.`id`\
INNER JOIN `degrees`\
ON `courses`.`degree_id`= `degrees`.`id`\
INNER JOIN `departments`\
ON `degrees`. `department_id` = `degrees`.`id`\
WHERE `departments`.`name` = "Dipartimento di Matematica"\
\
7 SELEZIONARE PER OGNI STUDENTE IL NUMERO DI TENTATIVI SOSTENUTI PER OGNI ESAME, STAMPANDO ANCHE IL VOTO MASSIMO SUCCESSIVAMENTE FILTRARE I TENTATIVI CON VOTO MINIMO 18SELEZIONARE PER OGNI STUDENTE IL NUMERO DI TENTATIVI SOSTENUTI PER OGNI ESAME, STAMPANDO ANCHE IL VOTO MASSIMO SUCCESSIVAMENTE FILTRARE I TENTATIVI CON VOTO MINIMO 18\
\
\
SELECT `exam_student`.`student_id`, `exam_student`.`exam_id`, COUNT(*) AS `numero_tentativi`, MAX(`exam_student`.`vote`) AS `voto_massimo`\
FROM `exam_student`\
GROUP BY `exam_student`.`student_id`, `exam_student`.`exam_id`\
HAVING MIN(`exam_student`.`vote`) >= 18;\
\
\
\
\
- Raggruppo i risultati per studente e esame, per conteggiare il numero di tentativi per ogni combinazione di studente e esame\
- Utilizzo la funzione COUNT(*) per conteggiare il numero di righe per ogni gruppo, che corrisponde al numero di tentativi di esame\
- Utilizzo la funzione MAX() per trovare il voto pi\'f9 alto tra tutti i tentativi per ogni gruppo.\
\
- Filtro  i gruppi per includere solo quelli in cui il voto minimo \'e8 almeno 18, utilizzando la clausola HAVING.\
\
}