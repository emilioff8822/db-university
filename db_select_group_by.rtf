{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 Times-Roman;
\f3\fnil\fcharset0 Monaco;\f4\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red52\green54\blue66;
\red199\green203\blue211;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c26667\c27451\c32941;
\cssrgb\c81961\c83529\c85882;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18480\viewh14640\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 1 studenti nati nel 1990\
\
SELECT *\
FROM `students` \
WHERE `date_of_birth` LIKE '1990-%-%';\
\
\
\
2 selezionare tutti corsi che valgono piu di 10 crediti\
\
SELECT * \
FROM `courses` \
WHERE cfu >10;\
\
\
3Eleziona tutti gli studenti con piu di 30anni\
\
SELECT *\
FROM `students` \
WHERE YEAR(CURDATE()) - YEAR(date_of_birth) > 30 \
\
4 selezionare tutti corsi del primo semestre del primo anno di un qualsiasi corso di laurea\
\
\
SELECT * \
FROM `courses` \
WHERE `period` = 'I semestre' \
AND year=1;\
\
\
5  selezionare tutti gli appelli d\'92esame che avvengono nel pomeriggio dopo le 14 del 20 06 2020\
\
SELECT * \
FROM `exams` \
WHERE `date` = '2020-06-20' \
AND HOUR(`hour`) >=14;\
\
6 selezionare tutti 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
i corsi di laurea magistrale 
\f2 \cb1 \
SELECT * \
FROM `degrees` \
WHERE `level` = 'magistrale';\
\
7 da quanti dipartimenti e\'92 formata l\'92universita\
\
SELECT COUNT(*) AS `numero_dipartimenti`\
FROM `departments`;\
\
8 quanti sono gli insegnanti che non hanno un numero di telefono\
\
SELECT *\
FROM `teachers`\
WHERE `phone` IS NULL;\
\
\

\fs72 \
BONUS\

\fs36 \
1 Contare quanti iscritti ci sono stati ogni anno\
\
SELECT YEAR(`enrolment_date`) AS `Anno_Iscrizione`, \
COUNT(*) AS `Numero_di_Iscritti`\
FROM `students`\
GROUP BY YEAR(`enrolment_date`);\
\
2 contare gli insegnati che hanno l\'92ufficio nello stesso edificio\
\pard\pardeftab720\partightenfactor0

\f3\fs21 \cf0 \cb4  Uso HAVING COUNT(*) > 1
\f4\fs32 \cf5   che assicura che vengano mostrati solo gli edifici in cui ci sono pi\'f9 di un insegnante
\f2\fs36 \cf2 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\
SELECT `office_address`, COUNT(*) AS `Numero_Insegnanti`\
FROM `teachers`\
GROUP BY office_address\
HAVING COUNT(*)>1;\
\
3 calcolare la media dei voti di ogni appello di esame\
\
SELECT `exam_id`, AVG(`vote`) AS `mediavoti`\
FROM `exam_student`\
GROUP BY `exam_id`;\
4 contare quanti corsi di laurea ci sono per ogni dipartimento\
\
SELECT department_id, COUNT(*) AS `numero_corsi_di_laurea`\
FROM `degrees`\
GROUP BY department_id;}